//// -----------------
//// Project Setup
//// -----------------

// creates a place to store modules
go mod init github.com/helix-is-here/Go-Practice/tree/main/2-create-a-module/greetings

// runs main function (I think?)
go run . 

 // downloads all modules that need to be imported
go mod tidy

//// -----------------
//// Go Coding
//// -----------------

package main

import (
	"fmt"
	"rsc.io/quote/v4"
)

func main() {
	// call a function
	fmt.Println(quote.Go())

	// declare a variable
	var my_num number

	// initialize a variable
	my_num = 2

	// the := operator is a shortcut for declaring and initializing a variable in one line
	// (Go uses the value on the right to determine the variable's type).
	name := "Jake"
}

// functions that start with a lowercase letter are only accessible to code in its own package

// Maps
// In Go, you initialize a map with the following syntax: make(map[key-type]value-type)

//// ------------
//// UNIT TESTING 
//// ------------

// Ending a file's name with _test.go tells the go test command that this file contains test functions.

go test
go test -v